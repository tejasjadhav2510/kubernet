&&&&&&&&&&&&&&&&&        kubernet    &&&&&&&&&&&&&&&&&&&
kubectl get nodes                                        ->to show nodes


kubectl get pods
kubectl get pods --all-namespaces                         ->to get pods
kubectl get pods --all-namespaces -o wide                 ->to get pods

kubectl delete pod <name of pod>                          --> to delete pods

kubectl create deployment nginx_image --image=nginx --replicas=4    -->to create pods


kubectl get deployment   
kubectl get deployment -o wide


%%%%%      to create container or services     %%%%%
kubectl expose deployment nginx_image --port=9000 --target-port=80 --name web1


%%%%%      to cheack services
kubectl get services
kubectl get services -o wide   ->show node1 and images running on that

%%%%%      to delete services    
kubectl delete services web1


%%%%%      to give particular node type    1)cluster node2)NodePort 3)LoadBalancer 4) DNS-LoadBalancer    %%%%%%%%
kubectl expose deployment nginx_image --port=9000 --target-port=80 --name web1 --type=NodePort


%%%%%      to increases replicas 
kubectl scale --replicas=5 deployment nginx_image
or
kubectl scale --replicas=5 deployment/nginx_image

%%%%%      to get pod shell
kubectl exec -ti <pod name> -- /bin/bash
%%%%
on shellll get output\\\\\\\\\\\\\\\\\\\\\\\\\>
curl <pod ip >-----------------kubectl get pods -o wide
curl <cluster ip >:9000-----------------kubectl get services


!@!@!@!@@@@@@@@@!@!@!@!@!@!@!@!@!@!@!@!@!@!@!@!@@!2!@!@1@121@12!2!2!!!!!!!!!!!!!!!!!!!!@@@@@@@@@@@@@@@@@@2

How to deploy yaml file in cluster


1)vim nginx-deploy.yaml
2)vim nginx-services.yaml

%%%%%         to run deployment
kubectl apply -f nginx-deploy.yaml
kubectl get deployment
kubectl delete deployment

%%%%%         to run services
kubectl apply -f nginx-services.yaml

kubectl get services
kubectl delete services



#vi nginx-services.yaml

apiVersion: v1
kind: Service
metadata:
    name: nginx-svc
spec:
    type: NodePort
    selector:
       app: nginx
    ports:
       - protocol: TCP
         port: 80
         targetPort: 80
         nodePort: 31500


#vi nginx-deploy.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
          app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.16.1
        ports:
        - containerPort: 80















































